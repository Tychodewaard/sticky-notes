//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Icatt.DotNetNuke.Modules.Geeltjes.DataAccess
{
    public partial class Icatt_Geeltjes_Geeltje
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Text
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Color
        {
            get;
            set;
        }
    
        public virtual string Xyz
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedAt
        {
            get;
            set;
        }
    
        public virtual int CreatedByUserId
        {
            get { return _createdByUserId; }
            set
            {
                if (_createdByUserId != value)
                {
                    if (Users != null && Users.UserID != value)
                    {
                        Users = null;
                    }
                    _createdByUserId = value;
                }
            }
        }
        private int _createdByUserId;
    
        public virtual Nullable<int> ThumbUpCount
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ThumbDownCount
        {
            get;
            set;
        }
    
        public virtual int ModuleId
        {
            get { return _moduleId; }
            set
            {
                if (_moduleId != value)
                {
                    if (Modules != null && Modules.ModuleID != value)
                    {
                        Modules = null;
                    }
                    _moduleId = value;
                }
            }
        }
        private int _moduleId;

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Icatt_Geeltjes_UserGeeltje> Icatt_Geeltjes_UserGeeltje
        {
            get
            {
                if (_icatt_Geeltjes_UserGeeltje == null)
                {
                    var newCollection = new FixupCollection<Icatt_Geeltjes_UserGeeltje>();
                    newCollection.CollectionChanged += FixupIcatt_Geeltjes_UserGeeltje;
                    _icatt_Geeltjes_UserGeeltje = newCollection;
                }
                return _icatt_Geeltjes_UserGeeltje;
            }
            set
            {
                if (!ReferenceEquals(_icatt_Geeltjes_UserGeeltje, value))
                {
                    var previousValue = _icatt_Geeltjes_UserGeeltje as FixupCollection<Icatt_Geeltjes_UserGeeltje>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIcatt_Geeltjes_UserGeeltje;
                    }
                    _icatt_Geeltjes_UserGeeltje = value;
                    var newValue = value as FixupCollection<Icatt_Geeltjes_UserGeeltje>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIcatt_Geeltjes_UserGeeltje;
                    }
                }
            }
        }
        private ICollection<Icatt_Geeltjes_UserGeeltje> _icatt_Geeltjes_UserGeeltje;
    
        public virtual Users Users
        {
            get { return _users; }
            set
            {
                if (!ReferenceEquals(_users, value))
                {
                    var previousValue = _users;
                    _users = value;
                    FixupUsers(previousValue);
                }
            }
        }
        private Users _users;
    
        public virtual Modules Modules
        {
            get { return _modules; }
            set
            {
                if (!ReferenceEquals(_modules, value))
                {
                    var previousValue = _modules;
                    _modules = value;
                    FixupModules(previousValue);
                }
            }
        }
        private Modules _modules;

        #endregion

        #region Association Fixup
    
        private void FixupUsers(Users previousValue)
        {
            if (previousValue != null && previousValue.Icatt_Geeltjes_Geeltje.Contains(this))
            {
                previousValue.Icatt_Geeltjes_Geeltje.Remove(this);
            }
    
            if (Users != null)
            {
                if (!Users.Icatt_Geeltjes_Geeltje.Contains(this))
                {
                    Users.Icatt_Geeltjes_Geeltje.Add(this);
                }
                if (CreatedByUserId != Users.UserID)
                {
                    CreatedByUserId = Users.UserID;
                }
            }
        }
    
        private void FixupModules(Modules previousValue)
        {
            if (previousValue != null && previousValue.Icatt_Geeltjes_Geeltje.Contains(this))
            {
                previousValue.Icatt_Geeltjes_Geeltje.Remove(this);
            }
    
            if (Modules != null)
            {
                if (!Modules.Icatt_Geeltjes_Geeltje.Contains(this))
                {
                    Modules.Icatt_Geeltjes_Geeltje.Add(this);
                }
                if (ModuleId != Modules.ModuleID)
                {
                    ModuleId = Modules.ModuleID;
                }
            }
        }
    
        private void FixupIcatt_Geeltjes_UserGeeltje(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Icatt_Geeltjes_UserGeeltje item in e.NewItems)
                {
                    item.Icatt_Geeltjes_Geeltje = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Icatt_Geeltjes_UserGeeltje item in e.OldItems)
                {
                    if (ReferenceEquals(item.Icatt_Geeltjes_Geeltje, this))
                    {
                        item.Icatt_Geeltjes_Geeltje = null;
                    }
                }
            }
        }

        #endregion

    }
}
