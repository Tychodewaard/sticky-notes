//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Icatt.DotNetNuke.Modules.Geeltjes.DataAccess
{
    public partial class Users
    {
        #region Primitive Properties
    
        public virtual int UserID
        {
            get;
            set;
        }
    
        public virtual string Username
        {
            get;
            set;
        }
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }
    
        public virtual bool IsSuperUser
        {
            get;
            set;
        }
    
        public virtual Nullable<int> AffiliateId
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string DisplayName
        {
            get;
            set;
        }
    
        public virtual bool UpdatePassword
        {
            get;
            set;
        }
    
        public virtual string LastIPAddress
        {
            get;
            set;
        }
    
        public virtual bool IsDeleted
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CreatedByUserID
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreatedOnDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LastModifiedByUserID
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastModifiedOnDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> PasswordResetToken
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PasswordResetExpiration
        {
            get;
            set;
        }
    
        public virtual string LowerEmail
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Icatt_Geeltjes_UserGeeltje> Icatt_Geeltjes_UserGeeltje
        {
            get
            {
                if (_icatt_Geeltjes_UserGeeltje == null)
                {
                    var newCollection = new FixupCollection<Icatt_Geeltjes_UserGeeltje>();
                    newCollection.CollectionChanged += FixupIcatt_Geeltjes_UserGeeltje;
                    _icatt_Geeltjes_UserGeeltje = newCollection;
                }
                return _icatt_Geeltjes_UserGeeltje;
            }
            set
            {
                if (!ReferenceEquals(_icatt_Geeltjes_UserGeeltje, value))
                {
                    var previousValue = _icatt_Geeltjes_UserGeeltje as FixupCollection<Icatt_Geeltjes_UserGeeltje>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIcatt_Geeltjes_UserGeeltje;
                    }
                    _icatt_Geeltjes_UserGeeltje = value;
                    var newValue = value as FixupCollection<Icatt_Geeltjes_UserGeeltje>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIcatt_Geeltjes_UserGeeltje;
                    }
                }
            }
        }
        private ICollection<Icatt_Geeltjes_UserGeeltje> _icatt_Geeltjes_UserGeeltje;
    
        public virtual ICollection<Icatt_Geeltjes_Geeltje> Icatt_Geeltjes_Geeltje
        {
            get
            {
                if (_icatt_Geeltjes_Geeltje == null)
                {
                    var newCollection = new FixupCollection<Icatt_Geeltjes_Geeltje>();
                    newCollection.CollectionChanged += FixupIcatt_Geeltjes_Geeltje;
                    _icatt_Geeltjes_Geeltje = newCollection;
                }
                return _icatt_Geeltjes_Geeltje;
            }
            set
            {
                if (!ReferenceEquals(_icatt_Geeltjes_Geeltje, value))
                {
                    var previousValue = _icatt_Geeltjes_Geeltje as FixupCollection<Icatt_Geeltjes_Geeltje>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupIcatt_Geeltjes_Geeltje;
                    }
                    _icatt_Geeltjes_Geeltje = value;
                    var newValue = value as FixupCollection<Icatt_Geeltjes_Geeltje>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupIcatt_Geeltjes_Geeltje;
                    }
                }
            }
        }
        private ICollection<Icatt_Geeltjes_Geeltje> _icatt_Geeltjes_Geeltje;

        #endregion

        #region Association Fixup
    
        private void FixupIcatt_Geeltjes_UserGeeltje(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Icatt_Geeltjes_UserGeeltje item in e.NewItems)
                {
                    item.Users = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Icatt_Geeltjes_UserGeeltje item in e.OldItems)
                {
                    if (ReferenceEquals(item.Users, this))
                    {
                        item.Users = null;
                    }
                }
            }
        }
    
        private void FixupIcatt_Geeltjes_Geeltje(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Icatt_Geeltjes_Geeltje item in e.NewItems)
                {
                    item.Users = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Icatt_Geeltjes_Geeltje item in e.OldItems)
                {
                    if (ReferenceEquals(item.Users, this))
                    {
                        item.Users = null;
                    }
                }
            }
        }

        #endregion

    }
}
